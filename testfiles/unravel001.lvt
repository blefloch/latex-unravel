%
% Copyright (C) Bruno Le Floch
%
\documentclass{minimal}
\input{regression-test}
\RequirePackage[enable-debug]{expl3}
\RequirePackage{unravel}
\ExplSyntaxOn
\debug_on:n { check-declarations , check-expressions , deprecation , log-functions }
\ExplSyntaxOff

\START
\ExplSyntaxOn

\unravelsetup { machine }

\TEST { \unravel }
  {
    \unravel { \exp_after:wN \c_space_tl \c_space_tl }
    \debug_off:n { check-expressions } % keep output sane
    \unravel { \prg_replicate:nn { 12 } { } }
  }

\TEST { \unravel ~ and ~ "\ " }
  {
    \unravel { \let \ = \c_backslash_str \show \ }
  }

\TEST { \unravel ~ and ~ glue ~ sign }
  {
    \skip_set:Nn \l_tmpa_skip { 2pt plus 3pt minus 4pt }
    \debug_off:n { check-declarations, check-expressions } % keep output sane
    \unravel { \tl_set:Nx \l_tmpa_tl { \skip_eval:n { - \l_tmpa_skip } } }
  }

\TEST { \unravel ~ and ~ glue ~ multiplier }
  {
    \skip_set:Nn \l_tmpa_skip { 2pt plus 3pt minus 4pt }
    \unravel { \l_tmpb_skip = -3.4 \l_tmpa_skip plus 1 fil \scan_stop: }
    \skip_show:N \l_tmpb_skip
  }

\cs_set:Npn \test:w #1 \scan_stop: { \tl_set:Nn \l_tmpa_tl {#1} }
\TEST { \skip ~ minus ~ plus }
  {
    \unravel_get:nnN { mute }
      { \afterassignment \test:w \l_tmpa_skip = 0pt minus 1pt plus 1pt \scan_stop: }
      \l_tmpb_tl
    \tl_if_eq:onTF { \l_tmpa_tl } { plus 1pt } { \TRUE } { \ERROR }
    \tl_if_empty:NTF \l_tmpb_tl { \TRUE } { \ERROR }
    \str_if_eq:eeTF { \skip_use:N \l_tmpa_skip } { 0.0pt ~ minus ~ 1.0pt }
      { \TRUE } { \ERROR }
  }

\END
