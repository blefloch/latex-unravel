This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: expanded support (github issue 36)
============================================================
Defining \g__unravel_input_1_gtl on line ...
[===== Start =====]
|| 
|> \exp_after:wN \show \expanded {\exp_after:wN \if_meaning:w \expanded
|> {\use_i:nn A\c_empty_tl }At\else: f\fi: }
[==========] \exp_after:wN \show 
|| \exp_after:wN \show 
|> \expanded {\exp_after:wN \if_meaning:w \expanded {\use_i:nn A\c_empty_tl
|> }At\else: f\fi: }
[==========] \expanded = \expanded
|| \exp_after:wN \show 
|| \expanded 
|> {\exp_after:wN \if_meaning:w \expanded {\use_i:nn A\c_empty_tl }At\else:
|> f\fi: }
Defining \g__unravel_input_2_gtl on line ...
[==========] \exp_after:wN \if_meaning:w 
|| \exp_after:wN \show 
|| \expanded 
|| {
|| \exp_after:wN \if_meaning:w 
|> \expanded {\use_i:nn A\c_empty_tl }At\else: f\fi: }
[==========] \expanded = \expanded
|| \exp_after:wN \show 
|| \expanded 
|| {
|| \exp_after:wN \if_meaning:w 
|| \expanded 
|> {\use_i:nn A\c_empty_tl }At\else: f\fi: }
Defining \g__unravel_input_3_gtl on line ...
Defining \g__unravel_input_4_gtl on line ...
[==========] \use_i:nn = \long macro:#1#2->#1
|| \exp_after:wN \show 
|| \expanded 
|| {
|| \exp_after:wN \if_meaning:w 
|| \expanded 
|| {
|> A}At\else: f\fi: }
[==========] \expanded {\exp_not:n {A}}=A
|| \exp_after:wN \show 
|| \expanded 
|| {
|| \exp_after:wN \if_meaning:w 
|> AAt\else: f\fi: }
[==========] back_input: \exp_after:wN \if_meaning:w 
|| \exp_after:wN \show 
|| \expanded 
|| {
|> \if_meaning:w AAt\else: f\fi: }
[==========] \if_meaning:w = \ifx
|| \exp_after:wN \show 
|| \expanded 
|| {
|| \if_meaning:w 
|> AAt\else: f\fi: }
[==========] Compare: \if_meaning:w AA=true
|| \exp_after:wN \show 
|| \expanded 
|| {
|> t\else: f\fi: }
[==========] \else: = \else => skipped to \fi: 
|| \exp_after:wN \show 
|| \expanded 
|| {t
|> }
[==========] \expanded {\exp_not:n {t}}=t
|| \exp_after:wN \show 
|> t
[==========] back_input: \exp_after:wN \show 
|| 
|> \show t
[==========] \show = \show
|| \show 
|> t
> the letter t.
<argument> t
l. ...  }
[===== End =====]
============================================================
============================================================
TEST 2: Runaway unravel (github issue 37)
============================================================
[===== Start =====]
|| 
|> \romannumeral \numexpr -1
[==========] \romannumeral = \romannumeral
|| \romannumeral 
|> \numexpr -1
[==========] \numexpr = \numexpr
|| \romannumeral 
|| \numexpr 
|> -1
[==========] -
|| \romannumeral 
|| \numexpr -
|> 1
[==========] 1
|| \romannumeral 
|| \numexpr -1
|> 
! Package unravel Error: Runaway \unravel, so \relax inserted.
For immediate help type H <return>.
 ...                                              
l. ...  }
Some TeX command expects input beyond the end of the argument of \unravel.
[==========] \numexpr -1 => -1
|| \romannumeral -1
|> 
[==========] \romannumeral -1=
|| 
|> 
[===== End =====]
[===== Start =====]
|| 
|> \romannumeral -`a
[==========] \romannumeral = \romannumeral
|| \romannumeral 
|> -`a
[==========] -
|| \romannumeral -
|> `a
[==========] `a=97
|| \romannumeral -97
|> 
! Package unravel Error: Runaway \unravel, so \relax inserted.
For immediate help type H <return>.
 ...                                              
l. ...  }
Some TeX command expects input beyond the end of the argument of \unravel.
[==========] \romannumeral -97=
|| 
|> \relax 
[==========] \relax = \relax
|| 
|> 
[===== End =====]
[===== Start =====]
|| 
|> \iffalse 
[==========] \iffalse = \iffalse
|| \iffalse 
|> 
! Package unravel Error: Runaway \if... Exiting \unravel
Type <return> to continue.
 ...                                              
l. ...  }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
============================================================
============================================================
TEST 3: Unit optional space (github issue 38)
============================================================
|macro:->\char 92 BOOM|
Defining \g__unravel_input_5_gtl on line ...
Defining \g__unravel_input_6_gtl on line ...
TRUE
TRUE
TRUE
Defining \g__unravel_input_7_gtl on line ...
Defining \g__unravel_input_8_gtl on line ...
Defining \g__unravel_input_9_gtl on line ...
Defining \g__unravel_input_10_gtl on line ...
Defining \g__unravel_input_11_gtl on line ...
Defining \g__unravel_input_12_gtl on line ...
Defining \g__unravel_input_13_gtl on line ...
Defining \g__unravel_input_14_gtl on line ...
! Package unravel Error: TeX sees "p" and throws an error:
(unravel)                
(unravel)                    Illegal unit of measure (pt inserted)
For immediate help type H <return>.
 ...                                              
l. ...  }
TeX's advice is:
    Dimensions can be in units of em, ex, in, pt, pc, cm, mm, dd, cc, nd, nc,
    bp, or sp; but yours is a new one! I'll assume that you meant to say pt,
    for printer's points. To recover gracefully from this error, it's best to
    delete the erroneous units; e.g., type `2' to delete two letters. (See
    Chapter 27 of The TeXbook.)
Defining \g__unravel_input_15_gtl on line ...
TRUE
TRUE
> \relax=\relax.
<argument> \relax 
l. ...  }
TRUE
============================================================
============================================================
TEST 4: Implicit number as dimension/glue unit (github issue 39)
============================================================
TRUE
> \parskip=15.25879pt plus 0.04759pt.
<recently read> }
l. ...  }
============================================================
